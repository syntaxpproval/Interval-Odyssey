#include <string.h>
#include <stdio.h>
#include "text.h"
#include "sound.h"
#include "sequencer.h"

// ... [Previous code remains the same until draw_grid] ...

void draw_grid(void) {
    UINT8 grid_start_y = 4;
    UINT8 block_tiles[4];  // Buffer for 2x2 tile block
    
    wait_vbl_done();
    fill_bkg_rect(0, grid_start_y, 10, 16, 0);
    
    CHANNEL_DATA* current_channel = &sequencer.channels[sequencer.current_channel];
    
    for(UINT8 step = 0; step < SEQ_MAX_STEPS; step++) {
        UINT8 x = (step % 4) * 2 + GRID_START_X;
        UINT8 y = (step / 4) * 2 + grid_start_y;
        UINT8 is_current = (step == sequencer.current_step);
        UINT8 tile = current_channel->steps[step].armed ? TILE_ARMED : TILE_UNARMED;
        
        if (is_current && sequencer.blink_counter > 15) {
            tile = TILE_BLANK;
        }
        
        // Fill the block buffer
        memset(block_tiles, tile, 4);
        
        wait_vbl_done();
        // Update all 4 tiles at once
        set_bkg_tiles(x, y, 2, 2, block_tiles);
    }
}

// Update the blink handling in update_sequencer
static void update_step_visuals(void) {
    UINT8 x = (sequencer.current_step % 4) * 2 + GRID_START_X;
    UINT8 y = (sequencer.current_step / 4) * 2 + GRID_START_Y;
    UINT8 tile = (sequencer.blink_counter > 15) ? TILE_BLANK : 
        (sequencer.channels[sequencer.current_channel].steps[sequencer.current_step].armed ? 
        TILE_ARMED : TILE_UNARMED);
    
    UINT8 block_tiles[4];
    memset(block_tiles, tile, 4);
    
    wait_vbl_done();
    set_bkg_tiles(x, y, 2, 2, block_tiles);
}

void update_sequencer(void) {
    static UINT8 last_blink_state = 0;
    static UINT8 last_playback_step = 0;
    
    sequencer.blink_counter++;
    if(sequencer.blink_counter > 30) {
        sequencer.blink_counter = 0;
    }
    
    // Only update blinking step in sub menu
    if(sequencer.menu_layer == MENU_SUB) {
        UINT8 current_blink_state = (sequencer.blink_counter > 15);
        if(current_blink_state != last_blink_state) {
            update_step_visuals();
            last_blink_state = current_blink_state;
        }
    }
    
    // ... [Rest of update_sequencer remains the same] ...
}

// ... [Rest of the file remains the same] ...